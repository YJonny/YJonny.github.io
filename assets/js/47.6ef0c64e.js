(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{472:function(a,t,s){"use strict";s.r(t);var n=s(1),r=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h4",{attrs:{id:"angular2的指令用过哪些-带和不带指令有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#angular2的指令用过哪些-带和不带指令有什么区别"}},[a._v("#")]),a._v(" angular2的指令用过哪些？带"),s("em",[a._v("和不带")]),a._v("指令有什么区别？")]),a._v(" "),s("p",[a._v("angular2的指令主要用来对模板的标签或者元素添加一些新的功能或特性，改变一个dom元素的外观或者行为。")]),a._v(" "),s("p",[a._v("Angular2指令分为两种：")]),a._v(" "),s("ul",[s("li",[a._v("属性指令：用于改变组件的外观或行为。ngModel、ngClass、ngStyle")]),a._v(" "),s("li",[a._v("结构指令：用于动态添加或者删除dom元素来改变dom的布局。*ngIf、"),s("em",[a._v("ngFor\n由上看出结构指令是以")]),a._v("为前缀，*是一个语法糖，避免使用复杂的语法。")])]),a._v(" "),s("h4",{attrs:{id:"创建一个自定义结构指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建一个自定义结构指令"}},[a._v("#")]),a._v(" 创建一个自定义结构指令？")]),a._v(" "),s("p",[a._v("步骤：")]),a._v(" "),s("ul",[s("li",[a._v("引入Directive装饰器")]),a._v(" "),s("li",[a._v("添加一个CSS属性选择器，标识指令")]),a._v(" "),s("li",[a._v("把装饰器用到实现的类上")])]),a._v(" "),s("h4",{attrs:{id:"用过angular的什么管道-pipe-如何自定义管道"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用过angular的什么管道-pipe-如何自定义管道"}},[a._v("#")]),a._v(" 用过angular的什么管道（pipe）？如何自定义管道？")]),a._v(" "),s("p",[a._v("管道是将数据作为输出，然后按照规则将其转换输出。Angular2中内置pipe有DatePipe、UpperCasePipe、CurrencyPipe、PercentPipe。")]),a._v(" "),s("p",[a._v("管道自定义：")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("PipeTransform"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("Pipe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("from")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'@angular/core'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/*\n\tusers:Array<any> =[\n        {name:'1',id:1},\n        {name:'2',id:2},\n        {name:'3',id:3},\n        {name:'4',id:4},\n\t];\n*/")]),a._v("\n@"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("Pipe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'filterUser'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("export")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("FilterUserPipe")]),a._v(" implement PipeTransform"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("transform")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("allUsers"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("Array"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("any"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("...")]),a._v("args"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" allUser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("user")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=>")]),a._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("上述代码所示：")]),a._v(" "),s("ul",[s("li",[a._v("使用@Pipe来装饰管道")]),a._v(" "),s("li",[a._v("实现PipeTransform的transform方法，该方法接收一个输入值和一些可选参数")]),a._v(" "),s("li",[a._v("在Pipe中指定管道名称，在模板中使用")]),a._v(" "),s("li",[a._v("当定义完成后，不要忘记在Module的declarations数组中包含这个管道")])]),a._v(" "),s("h4",{attrs:{id:"angular2-中的service"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#angular2-中的service"}},[a._v("#")]),a._v(" Angular2 中的service?")]),a._v(" "),s("p",[a._v("在Angular中，服务是指能被其他组件或者指令调用的单一的、可共享的代码块。服务能提高我们代码利用率，方便组件之间共享数据和方法，方便维护和测试。")]),a._v(" "),s("h4",{attrs:{id:"angular依赖注入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#angular依赖注入"}},[a._v("#")]),a._v(" Angular依赖注入")]),a._v(" "),s("p",[a._v("依赖就是具有一系列功能的服务(Service), 应用程序中的组件或者指令可能需要用到服务中的功能。Angular提供了一种机制，将这些服务注入到需要使用的组件或者指令中。")]),a._v(" "),s("p",[a._v("好处：")]),a._v(" "),s("ul",[s("li",[s("ol",[s("li",[a._v("不需要实例化，不用担心class的构造函数需要什么参数")])])]),a._v(" "),s("li",[s("ol",{attrs:{start:"2"}},[s("li",[a._v("一次注入(app module的provider中注入)，所有组件都可以使用。而且是使用同一个service，所以数据是共享的，可以用于组件间数据传递")])])])])])}),[],!1,null,null,null);t.default=r.exports}}]);