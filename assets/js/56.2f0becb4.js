(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{469:function(t,a,s){"use strict";s.r(a);var n=s(1),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("主要是问vue框架相关，但是我的项目经验全是Angular，所以面试官也没问什么。")]),t._v(" "),s("ol",[s("li",[t._v("angular和vue的区别")])]),t._v(" "),s("blockquote",[s("p",[t._v("体积方面，Angular比Vue大得多"),s("br"),t._v("\n都提供了脚手架，提高开发到构建的打包流程，都基于组件开发，编写可复用性组件，减少重复性工作。但是Angular凭借typescript本身比JavaScript更具有工程化的优势，在都是团队开发的情况下更有优势。"),s("br"),t._v("\nvue学习比angular简单，入门快"),s("br"),t._v("\nvue灵活性比Angular好，默认情况下vue不包含路由和http服务，需要自己安装插件，但是Angular提供了整体的支持"),s("br"),t._v("\nvue使用虚拟dom，Angular使用增量dom"),s("br"),t._v("\n由于虚拟dom重量较轻所以在性能方面vue稍微快点"),s("br"),t._v("\n双向绑定vue使用数据劫持，angular使用脏值检测")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("vue双向绑定原理?什么时候进行依赖收集？")])]),t._v(" "),s("blockquote",[s("p",[t._v("核心：通过Object.difineProperty来实现对属性的劫持，达到监听数据变动的目的"),s("br"),t._v("\nvue会遍历所有属性，然后使用Object.difineProperty将他们转换为setter和getter，在属性被访问和修改时通知变更。"),s("br"),t._v("\n在渲染过程会对vm上的数据访问，这时候会触发数据对象的getter，那么每个对象的getter都会有一个dep方法，当触发getter时就会调用dep.depend()方法，从而进行依赖收集。"),s("br"),t._v("\n收集到依赖后，当数据变化，就在setter里面触发Dep.notify()方法通知订阅者update数据。")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("vue的生态用到过那些")]),t._v(" "),s("li",[t._v("有没有做过权限控制？vue路由守卫了解吗？")])]),t._v(" "),s("blockquote",[s("p",[t._v("路由守卫提供两个钩子函数，分别是前置路由守卫beforeEach和后置路由守卫afterEach，前置路由守卫在路由跳转前触发，后置路由守卫在路由跳转后触发。"),s("br"),t._v("\n可以使用下面的方式注册全局路由守卫，当路由跳转触发时，路由守卫按照创建顺序异步解析执行，只有所有守卫resolved才会进入resolved状态，否则一直处于pending状态中。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" router "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VueRouter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 全局前置路由")]),t._v("\nrouter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" from"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 全局后置路由")]),t._v("\nrouter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("afterEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" from"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("路由守卫接收三个参数：")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("to：即将进入的路由， 一个Route对象")]),t._v(" "),s("li",[t._v("from：正要离开的路由， 一个路由对象")]),t._v(" "),s("li",[t._v("next：一个function，即将要执行的回调，令路由进入resolved状态")])])]),t._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[t._v("项目中的难点")]),t._v(" "),s("li",[t._v("有没有独立开发的项目(从0开始那种)")]),t._v(" "),s("li",[t._v("闭包、作用域、继承")])]),t._v(" "),s("h4",{attrs:{id:"闭包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[t._v("#")]),t._v(" 闭包")]),t._v(" "),s("blockquote",[s("p",[t._v("MDN: JavaScript允许函数嵌套，并且内部函数可以访问定义在外部函数的所有的变量和函数，以及外部函数可以访问的所有的变量和函数。但是外部函数不能访问定义在内部函数的变量和函数。此外，由于内部函数能访问外部函数的作用域，因此当内部函数周期大于外部函数周期时，外部函数定义的变量和函数的生存周期将比内部函数执行时间长。当内部函数以某一个方法被任何一个外部函数作用域访问时，闭包就产生了。")])]),t._v(" "),s("ol",{attrs:{start:"8"}},[s("li",[t._v("异步方式，call多个API时不用promise.all等语法糖怎么实现")]),t._v(" "),s("li",[t._v("promise详细讲解")]),t._v(" "),s("li",[t._v("jQuery链式调用")])]),t._v(" "),s("blockquote",[s("p",[t._v("方法内部在最后的时候将自己的this返回")])])])}),[],!1,null,null,null);a.default=e.exports}}]);