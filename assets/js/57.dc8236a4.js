(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{468:function(t,a,e){"use strict";e.r(a);var s=e(1),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"_1-var、let、const之间的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-var、let、const之间的区别"}},[t._v("#")]),t._v(" 1. var、let、const之间的区别？")]),t._v(" "),e("blockquote",[e("ul",[e("li",[t._v("var声明的变量可以被重复声明，let和const声明的变量不能被重复声明")]),t._v(" "),e("li",[t._v("var声明变量不受限于块级作用域可以提升，所以可以在声明之前访问，let和const受限于块级，会出现暂时性死区")]),t._v(" "),e("li",[t._v("var声明的变量和window想映射")]),t._v(" "),e("li",[t._v("const声明的变量必须初始化赋值")]),t._v(" "),e("li",[t._v("const声明的变量不能改变(引用地址不能改变)")])])]),t._v(" "),e("hr"),t._v(" "),e("h3",{attrs:{id:"_2-使用箭头函数要注意什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用箭头函数要注意什么"}},[t._v("#")]),t._v(" 2. 使用箭头函数要注意什么？")]),t._v(" "),e("blockquote",[e("p",[t._v("箭头函数的this指向父级，不能被call、apply等改变\n不能使用arguments对象\n不能作为构造函数，也就是不能被new\n不能使用yeild命令，也就是不能用作Generator函数")])]),t._v(" "),e("hr"),t._v(" "),e("h3",{attrs:{id:"_3-介绍下-set、map的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-介绍下-set、map的区别"}},[t._v("#")]),t._v(" 3. 介绍下 Set、Map的区别？")]),t._v(" "),e("p",[t._v("Set:")]),t._v(" "),e("blockquote",[e("p",[t._v("成员不能重复\n只有键值，没有键名类似于数组\n可以遍历，方法有delete,add,has")])]),t._v(" "),e("p",[t._v("Map：")]),t._v(" "),e("blockquote",[e("p",[t._v("本质上是键值对的集合，类似于集合\n可以遍历，可以和各种数据格式转换")])])])}),[],!1,null,null,null);a.default=r.exports}}]);